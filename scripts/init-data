#!/usr/bin/env ruby

require 'faker'
require_relative '../mentoring/application'

include Mentoring
include El

app = Mentoring::Application.init!

rates = [
  ProductRate[
    name: 'per-month',
    description: '/ month',
    unit: 'month',
    subscription: true
  ],
  ProductRate[
    name: 'per-half-hour',
    description: '/ half-hour',
    unit: 'half_hour',
    subscription: false
  ],
  ProductRate[
    name: 'per-minute',
    description: '/ minute',
    unit: 'minute',
    subscription: false
  ]
]

pp rates

app.product_rates.store_all!(rates) if app.product_rates.empty?

products = [
  Product[
    name: 'Ongoing Mentoring',
    description: 'Mentoring on a monthly basis, ' \
                 'up to 2 hours of synchronous time ' \
                 '(by video or phone) unlimited asynchronous ' \
                 'time (by chat or email).',
    image_path: '/img/mentoring.jpg',
    amount: 15_000,
    rate: 'per-month',
    sort_order: 3,
    meta: { stripe_price_id: 'price_1IfaNbJeITBgtWkksywHmJ2G' }
  ],
  Product[
    name: 'Instant Help',
    description: 'Remote programming help when the mentor is ' \
                 'available (by video conference) paid out by the ' \
                 'minute, first 5 minutes are free.',
    image_path: '/img/help.jpg',
    amount: 200,
    rate: 'per-minute',
    sort_order: 1,
    meta: { stripe_price_id: 'price_1IfaKNJeITBgtWkk53ie4flD' }
  ],
  Product[
    name: 'Instant Conversation',
    description: 'Remote programming help when the mentor is ' \
                 'available (by video conference) paid out by the ' \
                 'hour, first 5 minutes are free.',
    image_path: '/img/conversation.jpg',
    amount: 5000,
    rate: 'per-half-hour',
    sort_order: 2,
    meta: { stripe_price_id: 'price_1IfaKRJeITBgtWkkiRidT1tN' }
  ]
]

pp products

app.products.store_all!(products) if app.products.empty?

roles = [
  UserRole[name: 'admin'],
  UserRole[name: 'customer']
]

app.user_roles.store_all!(roles) if app.user_roles.empty?

users = [
  User[
    username: 'delon',
    displayname: 'Delon Newman',
    email: 'contact@delonnewman.name',
    role: 'admin',
    mentor: true,
    encrypted_password: '$2a$12$3uYDM6Fk1WgSa4IbTpvmpe1elRzi4d8p68n7mGFFi.eA4PCP7jLZO',
    meta: {
      'profile.image_path' => '/img/delon.jpg',
      'profile.location' => 'Albuquerque, NM, USA',
      'profile.timezoneOffset' => 6,
      'profile.interests' => [
        'programming languages',
        'system design',
        'data-driven systems',
        'web development',
        'ruby',
        'javascript',
        'clojure'
      ],
      'profile.links' => [
        {
          'url' => 'mailto:&#099;&#111;&#110;&#116;&#097;&#099;&#116;&#064;&#100;&#101;&#108;&#111;&#110;&#110;&#101;&#119;&#109;&#097;&#110;&#046;&#110;&#097;&#109;&#101;',
          'title' => 'Email Delon',
          'icon' => 'fas fa-envelope'
        },
        {
          'url' => 'https://delonnewman.name',
          'title' => "Delon's personal website",
          'icon' => 'fas fa-link'
        },
        {
          'url' => 'https://github.com/delonnewman',
          'title' => "Deon's GitHub profile",
          'icon' => 'fab fa-github'
        }
      ],
      'profile.bio' => <<~BIO,
        <p class="lead">
            Delon got his start professionally at 18 years old (in 1999) writing a data conversion script in Perl for his
            mother's client in the manufacturing industry. Since then he's worked for various companies, but primarily he's
            been a freelancer and consultant.
        </p>
        <p>
            He's used a variety of technologies including Perl, C, C#, <abbr title="Visual Basic for Applications">VBA</abbr>,
            Java, Python, Bash, PHP, Emacs Lisp, <abbr title="Structured Query Language">SQL</abbr> and Datalog, but mostly
            works with Ruby, JavaScript and Clojure.
        </p>
        <p>
            He loves learning and helping others learn. He's a self-professed math and science geek, but he also loves music
            (especially Jazz), poetry, photography and hiking with his beautiful wife and their dog Blu.
        </p>
        <p>
            If you'd like to learn more about Delon's background please visit his
            <a href="https://delonnewman.name">personal website</a> to see his resume or his
            <a href="https://github.com/delonnewman">GitHub profile</a> to see some of his open source work and experiments.
        </p>
      BIO
      'profile.availability' => {
        1 => {
          start: 10,
          end: 17
        },
        2 => {
          start: 10,
          end: 17
        },
        4 => {
          start: 10,
          end: 17
        },
        5 => {
          start: 10,
          end: 17
        }
      }
    },
  ],
  User[
    username: 'luna',
    displayname: 'Jackie Newman',
    email: 'roadrunner.jackie@gmail.com',
    role: 'admin',
    encrypted_password: '$2a$12$3uYDM6Fk1WgSa4IbTpvmpe1elRzi4d8p68n7mGFFi.eA4PCP7jLZO',
    meta: {}],
  User[
    username: 'the-man-in-black',
    displayname: 'Johnny Cash',
    email: 'delon.newman+jcash@gmail.com',
    role: 'customer',
    encrypted_password: '$2a$12$3uYDM6Fk1WgSa4IbTpvmpe1elRzi4d8p68n7mGFFi.eA4PCP7jLZO',
    meta: {}],
  User[
    username: 'june-carter',
    displayname: 'June Carter Cash',
    email: 'delon.newman+j-carter-cash@gmail.com',
    role: 'customer',
    encrypted_password: '$2a$12$3uYDM6Fk1WgSa4IbTpvmpe1elRzi4d8p68n7mGFFi.eA4PCP7jLZO',
    meta: {}]
]

pp users

app.users.store_all!(users) if app.users.empty?

if app.development? || app.test?
  customers = %w[the-man-in-black june-carter]

  sessions = 6.times.map do
    Mentoring::Session[
      mentor: 'delon',
      customer: customers.sample,
      product: app.products.first.id,
      started_at: Faker::Date.between(from: TimeUtils.days(3).ago, to: Date.today),
      zoom_meeting_id: 81_610_489_073
    ]
  end

  app.sessions.store_all!(sessions)
end
